version: '3.8'

services:
  # Supabase (PostgreSQL)
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: aivault
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "54322:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/core/database/recommendation_schema.sql:/docker-entrypoint-initdb.d/001-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Neural Discovery Engine Backend
  recommendation-engine:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/aivault
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-super-secret-key-change-in-production
      - ENVIRONMENT=development
      - LOG_LEVEL=info
    volumes:
      - ./packages/backend:/app
      - model_storage:/app/models
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Frontend (Next.js) - for integration testing
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
    depends_on:
      - recommendation-engine
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  model_storage:

networks:
  default:
    name: aivault-network
