version: '3.8'

services:
  ai-vault-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: ai-vault-backend
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SEAL_CONFIG_PATH=/app/seal_configs
      - KEY_STORE_PATH=/app/keys
      - HE_MODEL_STORE=/app/models
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://aiault:secure_password@postgres:5432/aiault_db
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./data/keys:/app/keys
      - ./data/models:/app/models
      - ./data/cache:/app/cache
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: ai-vault-postgres
    environment:
      - POSTGRES_DB=aiault_db
      - POSTGRES_USER=aiault
      - POSTGRES_PASSWORD=secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ai-vault-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
  redis_data:
